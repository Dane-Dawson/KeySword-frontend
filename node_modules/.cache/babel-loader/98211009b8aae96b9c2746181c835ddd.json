{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nlet baseURL = \"http://localhost:3000/\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchLevel = () => {\n      return fetch(baseURL + \"levels\").then(resp => resp.json()).then(level => this.setState({\n        level\n      }));\n    };\n\n    this.fetchUsers = () => {\n      return fetch(baseURL + \"users\").then(resp => resp.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.fetchMonsters = () => {\n      return fetch(baseURL + \"monsters\").then(resp => resp.json()).then(monsters => this.setState({\n        monsters\n      }));\n    };\n\n    this.createUser = userObject => {\n      fetch(baseURL + \"users\", userObject);\n    };\n\n    this.UserLogin = (username, password) => {\n      console.log(username, password);\n      let activeUser = this.state.users.filter(user => user.username === username);\n      console.log(activeUser);\n      this.setState({\n        activeUser\n      });\n\n      if (password === activeUser.password) {\n        this.setState({\n          activeUser: activeUser\n        });\n      }\n    };\n\n    this.checkIfLoggedIn = () => {\n      if (this.state.activeUser.length > 0) {\n        return /*#__PURE__*/React.createElement(GameShow, {\n          words: this.state.level,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 14\n          }\n        });\n      } else {\n        // this.parseUsernames()\n        return /*#__PURE__*/React.createElement(UserBar, {\n          logIn: this.UserLogin,\n          postUser: this.createUser,\n          refreshUsers: this.fetchUsers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"]\n    };\n  } //initial setup for game data\n\n\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  } //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), this.checkIfLoggedIn(), this.state.activeUser.length > 0 ? /*#__PURE__*/React.createElement(GameFooter, {\n      words: this.state.activeWords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 93\n      }\n    }, \"Please sign up or log in!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/App.js"],"names":["React","Component","GameHeader","GameShow","GameFooter","UserBar","baseURL","App","constructor","fetchLevel","fetch","then","resp","json","level","setState","fetchUsers","users","fetchMonsters","monsters","createUser","userObject","UserLogin","username","password","console","log","activeUser","state","filter","user","checkIfLoggedIn","length","words","bossWords","activeWords","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\n\nlet baseURL = \"http://localhost:3000/\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"],\n    };\n  }\n  //initial setup for game data\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters()\n  }\n  //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n  fetchLevel = () => {\n    return fetch(baseURL + \"levels\")\n      .then((resp) => resp.json())\n      .then((level) => this.setState({ level }));\n  };\n  fetchUsers = () => {\n    return fetch(baseURL + \"users\")\n      .then((resp) => resp.json())\n      .then((users) => this.setState({ users }));\n  };\n  fetchMonsters = () => {\n    return fetch(baseURL + \"monsters\")\n      .then((resp) => resp.json())\n      .then((monsters) => this.setState({ monsters }));\n  };\n\n\n\n\n\n\n  //***Helper functions *//\n\n  //create user model in DB, \n  //!!!!!!!!need to add uniqueness validation eventually!!!!!!!//\n  createUser = (userObject) => {\n    fetch(baseURL + \"users\", userObject)\n  }\n\n  //given User object, check if input of username and password exists in database, if so set activeUser to username \n  UserLogin = (username, password) => {\n    console.log(username, password)\n    let activeUser = this.state.users.filter(user => user.username === username)\n    console.log(activeUser)\n    this.setState({activeUser})\n    if (password === activeUser.password){ this.setState({activeUser: activeUser}) }\n  };\n\n  checkIfLoggedIn = () => {\n    if (this.state.activeUser.length > 0) {\n      return <GameShow words={this.state.level} />;\n    } else {\n      // this.parseUsernames()\n      return <UserBar logIn={this.UserLogin} postUser={this.createUser} refreshUsers={this.fetchUsers}/>;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <GameHeader />\n        {/* <GameShow words={this.state.level}/> */}\n        {this.checkIfLoggedIn()}\n        {this.state.activeUser.length > 0 ? <GameFooter words={this.state.activeWords} /> : <h2>Please sign up or log in!</h2>}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}