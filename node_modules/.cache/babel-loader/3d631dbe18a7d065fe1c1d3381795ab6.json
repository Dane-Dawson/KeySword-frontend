{"ast":null,"code":"var _jsxFileName = \"/Users/tomastobar/Development/code/flatiron_projects/KeySword/keysword-frontend/src/GameShow.js\";\nimport React, { Component } from 'react';\nimport TileSheetOne from './sprites/maps/tile_sheet01.png'; //WILL HAVE TO REMOBVE THIS ONCE THE INFORMATION FOR THE BACKGROUND IMAGE IS CAPTURED FROM THE INITIAL FETCH\n\nimport LevelOneBackGround from './sprites/maps/level_one_background.png';\n\nclass GameShow extends Component {\n  constructor() {\n    super();\n\n    this.renderBackGound = () => {\n      const bg = new Image();\n      bg.src = LevelOneBackGround; // debugger;\n\n      bg.onload = () => {\n        this.state.context.drawImage(bg, 0, 0, 300, 150);\n      };\n    };\n\n    this.renderMap = () => {\n      const tile = new Image();\n      tile.src = TileSheetOne;\n\n      tile.onload = () => {\n        for (let i = this.state.matrix.length - 1; i > -1; --i) {\n          let worldMatrix = this.state.matrix[i];\n          console.log(`WorldMatrix ${worldMatrix}`);\n          let source_x = worldMatrix % this.state.tileSheetColumns * (this.state.tileWidth * 2);\n          console.log(`source_x${source_x}`);\n          let source_y = Math.floor(worldMatrix / this.state.tileSheetColumns) * (this.state.tileHeight * 2);\n          console.log(`source_y${source_y}`);\n          let destination_x = i % this.state.matrixColumns * this.state.tileWidth;\n          console.log(`destination_x${destination_x}`);\n          let destination_y = Math.floor(i / this.state.matrixColumns) * this.state.tileHeight;\n          console.log(`destination_y${destination_y}`); // debugger\n\n          this.state.context.drawImage(tile, source_x, source_y, 8, 8, destination_x, destination_y, this.state.tileWidth, this.state.tileHeight);\n        }\n      };\n    };\n\n    this.state = {\n      canvasWidth: 800,\n      canvasHeight: 400,\n      context: null,\n      levelBackgroundImage: null,\n      tileSheetColumns: 8,\n      tileHeight: 16,\n      tileWidth: 16,\n      matrixColumns: 38,\n      matrixn    };\n  }\n  /*\n  00 01 02 03 04 05 06 07  \n  08 09 10 11 12 13 14 15 \n  16 17 18 19 20 21 22 23\n  24 25 26 27 28 29 30 31\n  32 33 34 35 36 37 38 39\n  40 41 42 43 44 45 46 47 \n  48 49 50 51 52 53 54 55\n  56 57 58 59 60 61 62 63 \n  64 65 66 67 68 69 70 71\n  */\n\n\n  componentDidMount() {\n    const cvs = document.getElementById(\"gameCanvas\");\n    const ctx = cvs.getContext('2d');\n    this.setState({\n      context: ctx\n    }); // this.renderBackGound()\n\n    this.renderMap();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"gameCanvas\",\n      style: {\n        width: `${this.state.canvasWidth}px`,\n        height: `${this.state.canvasHeight}px`,\n        paddingRight: '0',\n        paddingLeft: '0',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        display: 'block',\n        border: \"20px solid white\",\n        backgroundColor: 'lightGreen'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default GameShow; //NOTES:\n// The hard numbers to drawImage for level one background is: 300x150","map":{"version":3,"sources":["/Users/tomastobar/Development/code/flatiron_projects/KeySword/keysword-frontend/src/GameShow.js"],"names":["React","Component","TileSheetOne","LevelOneBackGround","GameShow","constructor","renderBackGound","bg","Image","src","onload","state","context","drawImage","renderMap","tile","i","matrix","length","worldMatrix","console","log","source_x","tileSheetColumns","tileWidth","source_y","Math","floor","tileHeight","destination_x","matrixColumns","destination_y","canvasWidth","canvasHeight","levelBackgroundImage","componentDidMount","cvs","document","getElementById","ctx","getContext","setState","render","width","height","paddingRight","paddingLeft","marginLeft","marginRight","display","border","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TileSheetOne from './sprites/maps/tile_sheet01.png'\n\n//WILL HAVE TO REMOBVE THIS ONCE THE INFORMATION FOR THE BACKGROUND IMAGE IS CAPTURED FROM THE INITIAL FETCH\nimport LevelOneBackGround from './sprites/maps/level_one_background.png'\n\nclass GameShow extends Component {\n    constructor() {\n        super();\n        this.state = {\n            canvasWidth: 800,\n            canvasHeight: 400,\n            context: null,\n            levelBackgroundImage: null,\n            tileSheetColumns: 8,\n            tileHeight: 16,\n            tileWidth: 16,\n            matrixColumns: 38,\n            matrix: [\n                4, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                64, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,\n                64, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48\n            ]\n        }\n    }\n\n    /*\n    00 01 02 03 04 05 06 07  \n    08 09 10 11 12 13 14 15 \n    16 17 18 19 20 21 22 23\n    24 25 26 27 28 29 30 31\n    32 33 34 35 36 37 38 39\n    40 41 42 43 44 45 46 47 \n    48 49 50 51 52 53 54 55\n    56 57 58 59 60 61 62 63 \n    64 65 66 67 68 69 70 71\n    */\n    componentDidMount() {\n        const cvs = document.getElementById(\"gameCanvas\")\n        const ctx = cvs.getContext('2d')\n        this.setState({ context: ctx })\n        // this.renderBackGound()\n        this.renderMap()\n    }\n\n    renderBackGound = () => {\n        const bg = new Image()\n        bg.src = LevelOneBackGround\n        // debugger;\n        bg.onload = () => {\n            this.state.context.drawImage(bg, 0, 0, 300, 150)\n        }\n    }\n\n    renderMap = () => {\n        const tile = new Image()\n        tile.src = TileSheetOne\n        tile.onload = () => {\n\n            for (let i = this.state.matrix.length - 1; i > -1; --i) {\n\n                let worldMatrix = this.state.matrix[i]\n                console.log(`WorldMatrix ${worldMatrix}`)\n\n                let source_x = (worldMatrix % this.state.tileSheetColumns) * (this.state.tileWidth * 2)\n                console.log(`source_x${source_x}`)\n\n                let source_y = Math.floor(worldMatrix / this.state.tileSheetColumns) * (this.state.tileHeight * 2)\n                console.log(`source_y${source_y}`)\n\n                let destination_x = (i % this.state.matrixColumns) * this.state.tileWidth\n                console.log(`destination_x${destination_x}`)\n\n                let destination_y = Math.floor(i / this.state.matrixColumns) * this.state.tileHeight\n                console.log(`destination_y${destination_y}`)\n                // debugger\n                this.state.context.drawImage(tile, source_x, source_y, 8, 8, destination_x, destination_y, this.state.tileWidth, this.state.tileHeight)\n\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <canvas id=\"gameCanvas\" style={{\n                width: `${this.state.canvasWidth}px`,\n                height: `${this.state.canvasHeight}px`,\n                paddingRight: '0',\n                paddingLeft: '0',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                display: 'block',\n                border: \"20px solid white\",\n                backgroundColor: 'lightGreen'\n            }}\n            >\n\n            </canvas>\n        )\n    }\n}\nexport default GameShow;\n\n\n//NOTES:\n// The hard numbers to drawImage for level one background is: 300x150"]},"metadata":{},"sourceType":"module"}