{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/GameFooter.js\";\nimport React, { Component } from \"react\";\nlet styleTemplate = {\n  display: \"flex\",\n  justifyContent: \"center\"\n};\n\nclass GameFooter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkValue = event => {\n      const index = this.state.words.indexOf(event.target.value);\n\n      if (index > -1) {\n        this.props.checkValue(event.target.value);\n        this.setState({\n          value: \"\"\n        });\n        event.target.value = \"\";\n        this.props.addScore();\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n      this.checkValue(event);\n      this.setState({\n        words: this.props.words\n      });\n      this.props.autoFeed();\n    };\n\n    this.state = {\n      value: \"\",\n      words: this.props.words\n    };\n  } //this function runs a check on if the word in the input matches the word in this components words array (which is App state.activeWords), and if so runs the parent function of checkValue, removing it from activeWords array, then clears the input field and adds score via prop passed from App\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styleTemplate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"white\",\n        fontFamily: \"Chalkduster\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Type the any of the following words in the space below to attack:\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: styleTemplate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"lightgray\",\n        fontFamily: \"Futura\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, this.props.words.join(\", \")), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      style: styleTemplate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Current score: \", this.props.currentScore), /*#__PURE__*/React.createElement(\"form\", {\n      autocomplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      onKeyPress: e => {\n        if (e.key === \"Enter\") e.preventDefault();\n      },\n      style: {\n        height: 20,\n        borderColor: \"gray\",\n        borderWidth: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.gameStartWords,\n      style: {\n        height: 40,\n        borderColor: \"gray\",\n        borderWidth: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Start game\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: styleTemplate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\",\n        fontFamily: \"Chalkduster\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Countdown Timer will go here\"), \" \"));\n  }\n\n}\n\nexport default GameFooter;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/GameFooter.js"],"names":["React","Component","styleTemplate","display","justifyContent","GameFooter","constructor","props","checkValue","event","index","state","words","indexOf","target","value","setState","addScore","handleChange","autoFeed","render","color","fontFamily","join","currentScore","e","key","preventDefault","height","borderColor","borderWidth","gameStartWords"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nlet styleTemplate = {\n  display: \"flex\",\n  justifyContent: \"center\",\n};\n\nclass GameFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", words: this.props.words };\n  }\n\n  //this function runs a check on if the word in the input matches the word in this components words array (which is App state.activeWords), and if so runs the parent function of checkValue, removing it from activeWords array, then clears the input field and adds score via prop passed from App\n  checkValue = (event) => {\n    const index = this.state.words.indexOf(event.target.value);\n    if (index > -1) {\n      this.props.checkValue(event.target.value);\n      this.setState({ value: \"\" });\n      event.target.value = \"\";\n      this.props.addScore();\n    }\n  };\n\n  //every keystroke in input field will check if input matches word and also populate words back to limit defined by prop passed from App\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n    this.checkValue(event);\n    this.setState({ words: this.props.words });\n    this.props.autoFeed();\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={styleTemplate}>\n          <h3 style={{ color: \"white\", fontFamily: \"Chalkduster\" }}>\n            Type the any of the following words in the space below to attack:\n          </h3>\n        </div>\n        <div style={styleTemplate}>\n          <h3 style={{ color: \"lightgray\", fontFamily: \"Futura\" }}>\n            {this.props.words.join(\", \")}\n          </h3>{\" \"}\n        </div>\n        <div style={styleTemplate}>\n          <p style={{ color: \"white\" }}>\n            Current score: {this.props.currentScore}\n          </p>\n          <form autocomplete=\"off\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") e.preventDefault();\n              }}\n              style={{ height: 20, borderColor: \"gray\", borderWidth: 5 }}\n            />\n          </form>\n          <button\n            onClick={this.props.gameStartWords}\n            style={{ height: 40, borderColor: \"gray\", borderWidth: 5 }}\n          >\n            Start game\n          </button>\n        </div>\n        <div style={styleTemplate}>\n          <h3 style={{ color: \"red\", fontFamily: \"Chalkduster\" }}>\n            Countdown Timer will go here\n          </h3>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\nexport default GameFooter;\n"]},"metadata":{},"sourceType":"module"}