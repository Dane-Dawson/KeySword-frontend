{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nimport background from \"./sprites/backgrounds/stonebackground.jpg\";\nimport footerlogo from \"./sprites/backgrounds/footerlogo.png\";\nlet baseURL = \"http://localhost:3000/\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchLevel = () => {\n      return fetch(baseURL + \"levels\").then(resp => resp.json()).then(level => this.setState({\n        level\n      }));\n    };\n\n    this.fetchUsers = () => {\n      return fetch(baseURL + \"users\").then(resp => resp.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.fetchMonsters = () => {\n      return fetch(baseURL + \"monsters\").then(resp => resp.json()).then(monsters => this.setState({\n        monsters\n      }));\n    };\n\n    this.createWordsArray = wordsString => {\n      let words = wordsString.split(\", \");\n      this.shuffleArray(words);\n      console.log(words);\n      return words;\n    };\n\n    this.shuffleArray = array => {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n    };\n\n    this.createUser = userObject => {\n      fetch(baseURL + \"users\", userObject);\n    };\n\n    this.UserLogin = (username, password) => {\n      console.log(username, password);\n      this.setState({\n        words: this.createWordsArray(this.state.level[0].words)\n      });\n      this.setState({\n        bossWords: this.createWordsArray(this.state.level[0].bossWords)\n      });\n      let activeUser = this.state.users.filter(user => user.username === username);\n      console.log(activeUser);\n      this.setState({\n        activeUser\n      });\n\n      if (password === activeUser.password) {\n        this.setState({\n          activeUser: activeUser\n        });\n      }\n    };\n\n    this.checkIfLoggedIn = () => {\n      if (this.state.activeUser.length > 0) {\n        return /*#__PURE__*/React.createElement(GameShow, {\n          words: this.state.level,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 14\n          }\n        });\n      } else {\n        // this.parseUsernames()\n        return /*#__PURE__*/React.createElement(UserBar, {\n          logIn: this.UserLogin,\n          postUser: this.createUser,\n          refreshUsers: this.fetchUsers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }\n        });\n      }\n    };\n\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"]\n    };\n  } //initial setup for game data\n\n\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  } //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), this.checkIfLoggedIn(), this.state.activeUser.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GameFooter, {\n      words: this.state.activeWords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center' // backgroundImage:`url(${background})`\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: footerlogo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/App.js"],"names":["React","Component","GameHeader","GameShow","GameFooter","UserBar","background","footerlogo","baseURL","App","constructor","fetchLevel","fetch","then","resp","json","level","setState","fetchUsers","users","fetchMonsters","monsters","createWordsArray","wordsString","words","split","shuffleArray","console","log","array","i","length","j","Math","floor","random","createUser","userObject","UserLogin","username","password","state","bossWords","activeUser","filter","user","checkIfLoggedIn","activeWords","componentDidMount","render","backgroundImage","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nimport background from \"./sprites/backgrounds/stonebackground.jpg\";\nimport footerlogo from \"./sprites/backgrounds/footerlogo.png\";\n\nlet baseURL = \"http://localhost:3000/\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"],\n    };\n  }\n  //initial setup for game data\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  }\n  //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n  fetchLevel = () => {\n    return fetch(baseURL + \"levels\")\n      .then((resp) => resp.json())\n      .then((level) => this.setState({ level }));\n  };\n  fetchUsers = () => {\n    return fetch(baseURL + \"users\")\n      .then((resp) => resp.json())\n      .then((users) => this.setState({ users }));\n  };\n  fetchMonsters = () => {\n    return fetch(baseURL + \"monsters\")\n      .then((resp) => resp.json())\n      .then((monsters) => this.setState({ monsters }));\n  };\n\n  //***Helper functions *//\n  \n  //take level words string and add to state words array, shuffling into unique array each time\n  createWordsArray = (wordsString) => {\n    let words = wordsString.split(\", \")\n    this.shuffleArray(words)\n    console.log(words)\n    return words\n  }\n  \n  //Shuffle array to randomize gameplay\n  shuffleArray = (array) => {\n      for (let i = array.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [array[i], array[j]] = [array[j], array[i]];\n      }\n  }\n\n  //create user model in DB,\n  //!!!!!!!!need to add uniqueness validation eventually!!!!!!!//\n  createUser = (userObject) => {\n    fetch(baseURL + \"users\", userObject);\n  };\n\n  //given User object, check if input of username and password exists in database, if so set activeUser to username. Also, use this moment to setState of active words, which can be moved but is here to avoid asynch nonsense\n  UserLogin = (username, password) => {\n    console.log(username, password);\n    this.setState({words: this.createWordsArray(this.state.level[0].words)})\n    this.setState({bossWords: this.createWordsArray(this.state.level[0].bossWords)})\n    let activeUser = this.state.users.filter(\n      (user) => user.username === username\n    );\n    console.log(activeUser);\n    this.setState({ activeUser });\n    if (password === activeUser.password) {\n      this.setState({ activeUser: activeUser });\n    }\n  };\n\n\n  checkIfLoggedIn = () => {\n    if (this.state.activeUser.length > 0) {\n      return <GameShow words={this.state.level} />;\n    } else {\n      // this.parseUsernames()\n      return (\n        <UserBar\n          logIn={this.UserLogin}\n          postUser={this.createUser}\n          refreshUsers={this.fetchUsers}\n        />\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        \n      >\n        <GameHeader />\n        {this.checkIfLoggedIn()}\n        {this.state.activeUser.length > 0 ? (\n          <div\n            style={{\n              backgroundImage: `url(${background})`,\n            }}\n          >\n            <GameFooter words={this.state.activeWords} />\n          </div>\n        ) : (\n          <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                // backgroundImage:`url(${background})`\n            }}\n            >\n                <img src={footerlogo}></img>\n            </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}