{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nlet baseURL = \"http://localhost:3000/\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchLevel = () => {\n      return fetch(baseURL + \"levels\").then(resp => resp.json()).then(level => this.setState({\n        level\n      }));\n    };\n\n    this.fetchUsers = () => {\n      return fetch(baseURL + \"users\").then(resp => resp.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.fetchMonsters = () => {\n      return fetch(baseURL + \"monsters\").then(resp => resp.json()).then(monsters => this.setState({\n        monsters\n      }));\n    };\n\n    this.parseUsernames = () => {\n      console.log(this.state.usernames);\n      let usernames = [];\n      this.state.users.map(user => usernames.push(user));\n      this.setState({\n        usernames\n      });\n    };\n\n    this.checkUserLogin = event => {\n      const index = this.state.usernames.indexOf(event.target.value);\n\n      if (index > -1) {\n        console.log(event.target.value);\n        this.setState({\n          value: \"\"\n        });\n        event.target.value = \"\";\n      }\n    };\n\n    this.checkLogIn = () => {\n      if (this.state.activeUser.length > 0) {\n        return /*#__PURE__*/React.createElement(GameShow, {\n          words: this.state.level,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 14\n          }\n        });\n      } else {\n        this.parseUsernames();\n        return /*#__PURE__*/React.createElement(UserBar, {\n          logIn: this.state.checkUserLogin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"],\n      usernames: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  } //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), this.checkLogIn(), /*#__PURE__*/React.createElement(GameFooter, {\n      words: this.state.activeWords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/App.js"],"names":["React","Component","GameHeader","GameShow","GameFooter","UserBar","baseURL","App","constructor","fetchLevel","fetch","then","resp","json","level","setState","fetchUsers","users","fetchMonsters","monsters","parseUsernames","console","log","state","usernames","map","user","push","checkUserLogin","event","index","indexOf","target","value","checkLogIn","activeUser","length","words","bossWords","activeWords","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\n\nlet baseURL = \"http://localhost:3000/\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"],\n      usernames: []\n    };\n  }\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters()\n    \n  }\n\n\n\n\n\n  //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n  fetchLevel = () => {\n    return fetch(baseURL + \"levels\")\n      .then((resp) => resp.json())\n      .then((level) => this.setState({ level }));\n  };\n  fetchUsers = () => {\n    return fetch(baseURL + \"users\")\n      .then((resp) => resp.json())\n      .then((users) => this.setState({ users }));\n  };\n  fetchMonsters = () => {\n    return fetch(baseURL + \"monsters\")\n      .then((resp) => resp.json())\n      .then((monsters) => this.setState({ monsters }));\n  };\n\n\n\n\n\n\n  //***Helper functions *//\n  parseUsernames = () => {\n    console.log(this.state.usernames)\n    let usernames = []\n    this.state.users.map(user => usernames.push(user))\n    this.setState({usernames})\n  }\n  //need to fill usernames state\n  checkUserLogin = (event) => {\n    const index = this.state.usernames.indexOf(event.target.value);\n    if (index > -1) {\n      console.log(event.target.value);\n      this.setState({ value: \"\" });\n      event.target.value = \"\";\n    }\n  };\n\n  checkLogIn = () => {\n    if (this.state.activeUser.length > 0) {\n      return <GameShow words={this.state.level} />;\n    } else {\n      this.parseUsernames()\n      return <UserBar logIn={this.state.checkUserLogin}/>;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <GameHeader />\n        {/* <GameShow words={this.state.level}/> */}\n        {this.checkLogIn()}\n        <GameFooter words={this.state.activeWords} />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}