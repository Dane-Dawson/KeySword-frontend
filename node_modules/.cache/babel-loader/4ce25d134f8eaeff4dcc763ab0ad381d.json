{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/UserBar.js\";\nimport React, { Component } from \"react\";\n\nclass UserBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = e => {\n      e.preventDefault();\n      let username = e.target.username.value;\n      let password = e.target.password.value;\n      console.log(username, password);\n      const fetchObject = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      };\n      this.props.postUser(fetchObject);\n      e.target.username.value = \"\";\n      e.target.password.value = \"\";\n      window.alert(\"You can log in now!\");\n    };\n\n    this.logInUser = e => {\n      e.preventDefault();\n      let username = e.target.username.value;\n      let password = e.target.password.value;\n      this.props.logIn(username, password);\n    };\n\n    this.state = {\n      value: \"\",\n      checked: false\n    };\n    this.handleChecked = this.handleChecked.bind(this);\n  }\n\n  handleChecked() {\n    this.setState({\n      checked: !this.state.checked\n    });\n    this.props.refreshUsers();\n  }\n\n  render() {\n    let inputBar; //conditional statement to verify if you have an account or not by checkbox, and adjust display accordingly\n    //if checked, log in option\n\n    if (this.state.checked) {\n      //   this.props.parseUsernames();\n      inputBar = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, \"Log in, friend!\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.logInUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, \"submit\"))));\n    } else {\n      //else create Account\n      inputBar = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, \"Create an account!\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.createUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, \"submit\"))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"switch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Click here if you have an account already\")), inputBar);\n  }\n\n}\n\nexport default UserBar;\n{\n  /* <label className=\"switch\">\n   <input\n     type=\"checkbox\"\n     value={this.state.isChecked}\n     onChange={this.handleChange}\n   />\n   <div className=\"slider\"></div>\n  </label>; */\n}","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/UserBar.js"],"names":["React","Component","UserBar","constructor","props","createUser","e","preventDefault","username","target","value","password","console","log","fetchObject","method","headers","body","JSON","stringify","postUser","window","alert","logInUser","logIn","state","checked","handleChecked","bind","setState","refreshUsers","render","inputBar","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass UserBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", checked: false };\n    this.handleChecked = this.handleChecked.bind(this);\n  }\n\n  handleChecked() {\n    this.setState({ checked: !this.state.checked });\n    this.props.refreshUsers();\n  }\n\n  createUser = (e) => {\n    e.preventDefault();\n    let username = e.target.username.value;\n    let password = e.target.password.value;\n    console.log(username, password);\n    const fetchObject = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ username: username, password: password }),\n    };\n    this.props.postUser(fetchObject);\n\n    e.target.username.value = \"\";\n    e.target.password.value = \"\";\n    window.alert(\"You can log in now!\");\n  };\n\n  logInUser = (e) => {\n    e.preventDefault();\n    let username = e.target.username.value;\n    let password = e.target.password.value;\n    this.props.logIn(username, password);\n  };\n\n  render() {\n    let inputBar;\n    //conditional statement to verify if you have an account or not by checkbox, and adjust display accordingly\n    //if checked, log in option\n    if (this.state.checked) {\n      //   this.props.parseUsernames();\n      inputBar = (\n        <div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <h1>Log in, friend!</h1>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <form onSubmit={this.logInUser}>\n              <label>Username: </label>\n              <input type=\"text\" name=\"username\" />\n              <br></br>\n              <br></br>\n              <label>Password: </label>\n              <input type=\"password\" name=\"password\" />\n              <br></br>\n              <button>submit</button>\n            </form>\n          </div>\n        </div>\n      );\n    } else {\n      //else create Account\n      inputBar = (\n        <div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <h1>Create an account!</h1>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <form onSubmit={this.createUser}>\n              <label>Username: </label>\n              <input type=\"text\" name=\"username\" />\n              <br></br>\n              <br></br>\n              <label>Password: </label>\n              <input type=\"password\" name=\"password\" />\n              <br></br>\n              <button>submit</button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <label className=\"switch\">\n            <input type=\"checkbox\" onChange={this.handleChecked} />\n            {/* <label>I have an account!</label> */}\n            <div className=\"slider\"></div>\n          </label>\n          <h3>Click here if you have an account already</h3>\n        </div>\n        {inputBar}\n      </div>\n    );\n  }\n}\nexport default UserBar;\n\n{/* <label className=\"switch\">\n  <input\n    type=\"checkbox\"\n    value={this.state.isChecked}\n    onChange={this.handleChange}\n  />\n  <div className=\"slider\"></div>\n</label>; */}\n"]},"metadata":{},"sourceType":"module"}