{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nimport background from \"./sprites/backgrounds/stonebackground.jpg\";\nimport footerlogo from \"./sprites/backgrounds/footerlogo.png\";\nlet baseURL = \"http://localhost:3000/\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchLevel = () => {\n      return fetch(baseURL + \"levels\").then(resp => resp.json()).then(level => this.setState({\n        level\n      }));\n    };\n\n    this.fetchUsers = () => {\n      return fetch(baseURL + \"users\").then(resp => resp.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.fetchMonsters = () => {\n      return fetch(baseURL + \"monsters\").then(resp => resp.json()).then(monsters => this.setState({\n        monsters\n      }));\n    };\n\n    this.createWordsArray = wordsString => {\n      let words = wordsString.split(\", \");\n      this.shuffleArray(words);\n      console.log(words);\n      return words;\n    };\n\n    this.checkValue = word => {\n      const index = this.state.activeWords.indexOf(word);\n\n      if (index > -1) {\n        this.setState(this.state.activeWords.splice(index, 1));\n      }\n    };\n\n    this.addWordToActiveWord = () => {\n      let wordArray = this.state.words;\n      let wordCounter = this.state.wordCounter;\n\n      if (wordArray.length === wordCounter) {\n        wordCounter = 0;\n      }\n\n      let newWord = wordArray[wordCounter];\n      this.setState({\n        activeWords: [...this.state.activeWords, newWord]\n      });\n      wordCounter += 1;\n      this.setState({\n        wordCounter\n      });\n    };\n\n    this.shuffleArray = array => {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n    };\n\n    this.createUser = userObject => {\n      console.log(userObject);\n      fetch(baseURL + \"users\", userObject);\n    };\n\n    this.UserLogin = (username, password) => {\n      console.log(username, password);\n      this.setState({\n        words: this.createWordsArray(this.state.level[0].words)\n      });\n      this.setState({\n        bossWords: this.createWordsArray(this.state.level[0].bossWords)\n      });\n      let activeUser = this.state.users.filter(user => user.username === username);\n      console.log(activeUser);\n      this.setState({\n        activeUser\n      });\n\n      if (password === activeUser.password) {\n        this.setState({\n          activeUser: activeUser\n        });\n      }\n    };\n\n    this.checkIfLoggedIn = () => {\n      if (this.state.activeUser.length > 0) {\n        return /*#__PURE__*/React.createElement(GameShow, {\n          words: this.state.level,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 14\n          }\n        });\n      } else {\n        // this.parseUsernames()\n        return /*#__PURE__*/React.createElement(UserBar, {\n          logIn: this.UserLogin,\n          postUser: this.createUser,\n          refreshUsers: this.fetchUsers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }\n        });\n      }\n    };\n\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [],\n      wordCounter: 0\n    };\n  } //initial setup for game data\n\n\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  } //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), this.checkIfLoggedIn(), this.state.activeUser.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GameFooter, {\n      words: this.state.activeWords,\n      checkValue: this.checkValue,\n      addWord: this.addWordToActiveWord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: footerlogo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/App.js"],"names":["React","Component","GameHeader","GameShow","GameFooter","UserBar","background","footerlogo","baseURL","App","constructor","fetchLevel","fetch","then","resp","json","level","setState","fetchUsers","users","fetchMonsters","monsters","createWordsArray","wordsString","words","split","shuffleArray","console","log","checkValue","word","index","state","activeWords","indexOf","splice","addWordToActiveWord","wordArray","wordCounter","length","newWord","array","i","j","Math","floor","random","createUser","userObject","UserLogin","username","password","bossWords","activeUser","filter","user","checkIfLoggedIn","componentDidMount","render","backgroundImage","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nimport background from \"./sprites/backgrounds/stonebackground.jpg\";\nimport footerlogo from \"./sprites/backgrounds/footerlogo.png\";\n\nlet baseURL = \"http://localhost:3000/\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [],\n      wordCounter: 0,\n    };\n  }\n  //initial setup for game data\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  }\n  //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n  fetchLevel = () => {\n    return fetch(baseURL + \"levels\")\n      .then((resp) => resp.json())\n      .then((level) => this.setState({ level }));\n  };\n  fetchUsers = () => {\n    return fetch(baseURL + \"users\")\n      .then((resp) => resp.json())\n      .then((users) => this.setState({ users }));\n  };\n  fetchMonsters = () => {\n    return fetch(baseURL + \"monsters\")\n      .then((resp) => resp.json())\n      .then((monsters) => this.setState({ monsters }));\n  };\n\n  //***Helper functions *//\n\n  //take level words string and add to state words array, shuffling into unique array each time\n  createWordsArray = (wordsString) => {\n    let words = wordsString.split(\", \");\n    this.shuffleArray(words);\n    console.log(words);\n    return words;\n  };\n\n\n  checkValue = (word) => {\n    const index = this.state.activeWords.indexOf(word);\n    if (index > -1) {\n      this.setState(this.state.activeWords.splice(index, 1));\n    }\n  };\n\n  //add single word from word array to active words on rotating basis without altering original word array\n  addWordToActiveWord = () => {\n    let wordArray = this.state.words;\n    let wordCounter = this.state.wordCounter;\n    if (wordArray.length === wordCounter) {\n      wordCounter = 0\n    }\n    let newWord = wordArray[wordCounter];\n    this.setState({ activeWords: [...this.state.activeWords, newWord] });\n    wordCounter += 1;\n\n    this.setState({ wordCounter });\n  };\n\n  //Shuffle array to randomize gameplay\n  shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n\n  //create user model in DB,\n  //!!!!!!!!need to add uniqueness validation eventually!!!!!!!//\n  createUser = (userObject) => {\n    console.log(userObject)\n    fetch(baseURL + \"users\", userObject);\n  };\n\n  //given User object, check if input of username and password exists in database, if so set activeUser to username. Also, use this moment to setState of active words, which can be moved but is here to avoid asynch nonsense\n  UserLogin = (username, password) => {\n    console.log(username, password);\n    this.setState({ words: this.createWordsArray(this.state.level[0].words) });\n    this.setState({\n      bossWords: this.createWordsArray(this.state.level[0].bossWords),\n    });\n    let activeUser = this.state.users.filter(\n      (user) => user.username === username\n    );\n    console.log(activeUser);\n    this.setState({ activeUser });\n    if (password === activeUser.password) {\n      this.setState({ activeUser: activeUser });\n    }\n  };\n\n  checkIfLoggedIn = () => {\n    if (this.state.activeUser.length > 0) {\n      return <GameShow words={this.state.level} />;\n    } else {\n      // this.parseUsernames()\n      return (\n        <UserBar\n          logIn={this.UserLogin}\n          postUser={this.createUser}\n          refreshUsers={this.fetchUsers}\n        />\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <GameHeader />\n        {this.checkIfLoggedIn()}\n        {this.state.activeUser.length > 0 ? (\n          <div\n            style={{\n              backgroundImage: `url(${background})`,\n            }}\n          >\n            <GameFooter \n            words={this.state.activeWords} \n            checkValue={this.checkValue}\n            addWord={this.addWordToActiveWord}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={footerlogo}></img>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}