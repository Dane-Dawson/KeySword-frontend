{"ast":null,"code":"var _jsxFileName = \"/Users/tomastobar/Development/code/flatiron_projects/KeySword/keysword-frontend/src/GameShow.js\";\nimport React, { Component } from 'react';\nimport TileSheetOne from './sprites/maps/tile_sheet01.png'; //WILL HAVE TO REMOBVE THIS ONCE THE INFORMATION FOR THE BACKGROUND IMAGE IS CAPTURED FROM THE INITIAL FETCH\n\nimport LevelOneBackGround from './sprites/maps/level_one_background.png';\n\nclass GameShow extends Component {\n  constructor() {\n    super();\n\n    this.renderBackGound = () => {\n      const bg = new Image();\n      bg.src = LevelOneBackGround; // debugger;\n\n      bg.onload = () => {\n        this.state.context.drawImage(bg, 0, 0, 300, 150);\n      };\n    };\n\n    this.renderMap = () => {\n      const tile = new Image();\n      tile.src = TileSheetOne;\n\n      tile.onload = () => {\n        for (let i = this.state.matrix.length - 1; i > -1; --i) {\n          let worldMatrix = this.state.matrix[i];\n          console.log(`WorldMatrix ${worldMatrix}`);\n          let source_x = worldMatrix % this.state.tileSheetColumns * (this.state.tileWidth * 2);\n          console.log(`source_x${source_x}`);\n          let source_y = Math.floor(worldMatrix / this.state.tileSheetColumns) * (this.state.tileHeight * 2);\n          console.log(`source_y${source_y}`);\n          let destination_x = i % this.state.matrixColumns * this.state.tileWidth;\n          console.log(`destination_x${destination_x}`);\n          let destination_y = Math.floor(i / this.state.matrixColumns) * this.state.tileHeight;\n          console.log(`destination_y${destination_y}`); // debugger\n\n          this.state.context.drawImage(tile, source_x, source_y, 16, 16, destination_x, destination_y, this.state.tileWidth, this.state.tileHeight);\n        }\n      };\n    };\n\n    this.state = {\n      canvasWidth: 800,\n      canvasHeight: 400,\n      context: null,\n      levelBackgroundImage: null,\n      tileSheetColumns: 8,\n      tileHeight: 8,\n      tileWidth: 8,\n      matrixColumns: 38,\n      matrix: [48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48]\n    };\n  }\n\n  componentDidMount() {\n    const cvs = document.getElementById(\"gameCanvas\");\n    const ctx = cvs.getContext('2d');\n    this.setState({\n      context: ctx\n    }); // this.renderBackGound()\n\n    this.renderMap();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"gameCanvas\",\n      style: {\n        width: `${this.state.canvasWidth}px`,\n        height: `${this.state.canvasHeight}px`,\n        paddingRight: '0',\n        paddingLeft: '0',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        display: 'block',\n        border: \"20px solid white\",\n        backgroundColor: 'lightGreen'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default GameShow; //NOTES:\n// The hard numbers to drawImage for level one background is: 300x150","map":{"version":3,"sources":["/Users/tomastobar/Development/code/flatiron_projects/KeySword/keysword-frontend/src/GameShow.js"],"names":["React","Component","TileSheetOne","LevelOneBackGround","GameShow","constructor","renderBackGound","bg","Image","src","onload","state","context","drawImage","renderMap","tile","i","matrix","length","worldMatrix","console","log","source_x","tileSheetColumns","tileWidth","source_y","Math","floor","tileHeight","destination_x","matrixColumns","destination_y","canvasWidth","canvasHeight","levelBackgroundImage","componentDidMount","cvs","document","getElementById","ctx","getContext","setState","render","width","height","paddingRight","paddingLeft","marginLeft","marginRight","display","border","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TileSheetOne from './sprites/maps/tile_sheet01.png'\n\n//WILL HAVE TO REMOBVE THIS ONCE THE INFORMATION FOR THE BACKGROUND IMAGE IS CAPTURED FROM THE INITIAL FETCH\nimport LevelOneBackGround from './sprites/maps/level_one_background.png'\n\nclass GameShow extends Component {\n    constructor() {\n        super();\n        this.state = {\n            canvasWidth: 800,\n            canvasHeight: 400,\n            context: null,\n            levelBackgroundImage: null,\n            tileSheetColumns: 8,\n            tileHeight: 8,\n            tileWidth: 8,\n            matrixColumns: 38,\n            matrix: [\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n                48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,\n            \n            ]\n        }\n    }\n\n    componentDidMount() {\n        const cvs = document.getElementById(\"gameCanvas\")\n        const ctx = cvs.getContext('2d')\n        this.setState({ context: ctx })\n        // this.renderBackGound()\n        this.renderMap()\n    }\n\n    renderBackGound = () => {\n        const bg = new Image()\n        bg.src = LevelOneBackGround\n        // debugger;\n        bg.onload = () => {\n            this.state.context.drawImage(bg, 0, 0, 300, 150)\n        }\n    }\n\n    renderMap = () => {\n        const tile = new Image()\n        tile.src = TileSheetOne\n        tile.onload = () => {\n\n            for (let i = this.state.matrix.length - 1; i > -1; --i) {\n\n                let worldMatrix = this.state.matrix[i]\n                console.log(`WorldMatrix ${worldMatrix}`)\n\n                let source_x = (worldMatrix % this.state.tileSheetColumns) * (this.state.tileWidth * 2)\n                console.log(`source_x${source_x}`)\n\n                let source_y = Math.floor(worldMatrix / this.state.tileSheetColumns) * (this.state.tileHeight * 2)\n                console.log(`source_y${source_y}`)\n\n                let destination_x = (i % this.state.matrixColumns) * this.state.tileWidth\n                console.log(`destination_x${destination_x}`)\n\n                let destination_y = Math.floor(i / this.state.matrixColumns) * this.state.tileHeight\n                console.log(`destination_y${destination_y}`)\n                // debugger\n                this.state.context.drawImage(tile, source_x, source_y, 16, 16, destination_x, destination_y, this.state.tileWidth, this.state.tileHeight)\n\n            }\n        }\n    }\n\n\n    render() {\n        return (\n            <canvas id=\"gameCanvas\" style={{\n                width: `${this.state.canvasWidth}px`,\n                height: `${this.state.canvasHeight}px`,\n                paddingRight: '0',\n                paddingLeft: '0',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                display: 'block',\n                border: \"20px solid white\",\n                backgroundColor: 'lightGreen'\n            }}\n            >\n\n            </canvas>\n        )\n    }\n}\nexport default GameShow;\n\n\n//NOTES:\n// The hard numbers to drawImage for level one background is: 300x150"]},"metadata":{},"sourceType":"module"}