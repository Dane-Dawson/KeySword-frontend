{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nlet baseURL = \"http://localhost:3000/\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchLevel = () => {\n      return fetch(baseURL + \"levels\").then(resp => resp.json()).then(level => this.setState({\n        level\n      }));\n    };\n\n    this.fetchUsers = () => {\n      return fetch(baseURL + \"users\").then(resp => resp.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.checkLogIn = () => {\n      if (this.state.activeUser.length > 0) {\n        return /*#__PURE__*/React.createElement(GameShow, {\n          words: this.state.level,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(UserBar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [\"user\"],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"]\n    };\n  }\n\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers(); //capture details of gameplay and user information\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), this.checkLogIn(), /*#__PURE__*/React.createElement(GameFooter, {\n      words: this.state.activeWords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/App.js"],"names":["React","Component","GameHeader","GameShow","GameFooter","UserBar","baseURL","App","constructor","fetchLevel","fetch","then","resp","json","level","setState","fetchUsers","users","checkLogIn","state","activeUser","length","monsters","words","bossWords","activeWords","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,OAAO,GAAG,wBAAd;;AACA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBdC,UAlBc,GAkBD,MAAM;AACjB,aAAOC,KAAK,CAACJ,OAAO,GAAG,QAAX,CAAL,CACJK,IADI,CACEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADX,EAEJF,IAFI,CAEEG,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,CAFZ,CAAP;AAGD,KAtBa;;AAAA,SAuBdE,UAvBc,GAuBD,MAAM;AACjB,aAAON,KAAK,CAACJ,OAAO,GAAG,OAAX,CAAL,CACJK,IADI,CACEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADX,EAEJF,IAFI,CAEEM,KAAD,IAAW,KAAKF,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd,CAFZ,CAAP;AAGD,KA3Ba;;AAAA,SA6BdC,UA7Bc,GA6BD,MAAM;AACjB,UAAI,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,4BAAO,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWL,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAnCa;;AAEZ,SAAKK,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE,EADI;AAEXQ,MAAAA,QAAQ,EAAE,EAFC;AAGXL,MAAAA,KAAK,EAAE,EAHI;AAIXG,MAAAA,UAAU,EAAE,CAAC,MAAD,CAJD;AAKXG,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,SAAS,EAAE,EANA;AAOXC,MAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,MAAX;AAPF,KAAb;AASD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,UAAL;AACA,SAAKO,UAAL,GAFkB,CAGlB;AACD;;AAqBDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGG,KAAKT,UAAL,EAHH,eAIE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWM,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA/CyB;;AAiD5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\n\nlet baseURL = \"http://localhost:3000/\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [\"user\"],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"],\n    };\n  }\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    //capture details of gameplay and user information\n  }\n\n  fetchLevel = () => {\n    return fetch(baseURL + \"levels\")\n      .then((resp) => resp.json())\n      .then((level) => this.setState({ level }));\n  };\n  fetchUsers = () => {\n    return fetch(baseURL + \"users\")\n      .then((resp) => resp.json())\n      .then((users) => this.setState({ users }));\n  };\n\n  checkLogIn = () => {\n    if (this.state.activeUser.length > 0) {\n      return <GameShow words={this.state.level} />;\n    } else {\n      return <UserBar />;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <GameHeader />\n        {/* <GameShow words={this.state.level}/> */}\n        {this.checkLogIn()}\n        <GameFooter words={this.state.activeWords} />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}