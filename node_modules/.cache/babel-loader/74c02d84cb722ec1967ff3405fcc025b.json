{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport GameHeader from './GameHeader';\nimport GameShow from './GameShow';\nimport GameFooter from './GameFooter';\nlet baseURL = 'http://localhost:3000/';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchLevel = () => {\n      return fetch(baseURL + \"levels\").then(resp => resp.json()).then(level => this.setState({\n        level\n      }));\n    };\n\n    this.fetchUsers = () => {\n      return fetch(baseURL + \"users\").then(resp => resp.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers(); //capture details of gameplay and user information\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(GameShow, {\n      words: this.state.level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(GameFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/App.js"],"names":["React","Component","GameHeader","GameShow","GameFooter","baseURL","App","constructor","fetchLevel","fetch","then","resp","json","level","setState","fetchUsers","users","state","monsters","activeUser","words","bossWords","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAIC,OAAO,GAAG,wBAAd;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAE;AACX;;AADW,SAkBbC,UAlBa,GAkBA,MAAM;AACjB,aAAOC,KAAK,CAACJ,OAAO,GAAG,QAAX,CAAL,CACNK,IADM,CACDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADP,EAENF,IAFM,CAEDG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd,CAFR,CAAP;AAGD,KAtBY;;AAAA,SAuBbE,UAvBa,GAuBA,MAAM;AACjB,aAAON,KAAK,CAACJ,OAAO,GAAG,OAAX,CAAL,CACNK,IADM,CACDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADP,EAENF,IAFM,CAEDM,KAAK,IAAI,KAAKF,QAAL,CAAc;AAACE,QAAAA;AAAD,OAAd,CAFR,CAAP;AAGD,KA3BY;;AAEX,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXK,MAAAA,QAAQ,EAAE,EAFC;AAGXF,MAAAA,KAAK,EAAE,EAHI;AAIXG,MAAAA,UAAU,EAAE,EAJD;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,SAAS,EAAE;AANA,KAAb;AASD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKd,UAAL;AACA,SAAKO,UAAL,GAFiB,CAGjB;AACD;;AAcDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWJ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADF;AAOD;;AAvCyB;;AAyC5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport GameHeader from './GameHeader'\nimport GameShow from './GameShow'\nimport GameFooter from './GameFooter'\n\nlet baseURL = 'http://localhost:3000/'\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      \n    }\n  }\n  componentDidMount(){\n    this.fetchLevel()\n    this.fetchUsers()\n    //capture details of gameplay and user information\n  }\n  \n  fetchLevel = () => {\n    return fetch(baseURL + \"levels\")\n    .then(resp => resp.json())\n    .then(level => this.setState({level}))\n  }\n  fetchUsers = () => {\n    return fetch(baseURL + \"users\")\n    .then(resp => resp.json())\n    .then(users => this.setState({users}))\n  }\n  \n\n  render() {\n    return(\n      <div className=\"App\">\n      <GameHeader />\n      <GameShow words={this.state.level}/>\n      <GameFooter />\n    </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}