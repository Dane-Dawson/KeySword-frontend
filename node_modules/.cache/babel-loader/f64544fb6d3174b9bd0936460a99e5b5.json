{"ast":null,"code":"var _jsxFileName = \"/Users/tomastobar/Development/code/flatiron_projects/KeySword/keysword-frontend/src/GameShow.js\";\nimport React, { Component } from 'react'; //WILL HAVE TO REMOBVE THIS ONCE THE INFORMATION FOR THE BACKGROUND IMAGE IS CAPTURED FROM THE INITIAL FETCH\n\nimport LevelOneBackGround from './sprites/maps/level_one_background.png';\n\nclass GameShow extends Component {\n  constructor() {\n    super();\n\n    this.renderBackGound = () => {\n      const bg = new Image();\n      bg.src = LevelOneBackGround; // debugger;\n\n      bg.onload = () => {\n        this.state.context.drawImage(bg, 0, 0, 300, 150);\n      };\n    };\n\n    this.state = {\n      canvasWidth: 400,\n      canvasHeight: 400,\n      context: null,\n      levelBackgroundImage: null,\n      tileSheetColumns: 0,\n      tileHeight: 0,\n      tileWidth: 0,\n      matrixColumns: 0,\n      matrix: []\n    };\n  }\n\n  componentDidMount() {\n    const cvs = document.getElementById(\"gameCanvas\");\n    const ctx = cvs.getContext('2d');\n    this.setState({\n      context: ctx\n    });\n    this.renderBackGound();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"gameCanvas\",\n      style: {\n        width: `${this.state.canvasWidth}px`,\n        height: `${this.state.canvasHeight}px`,\n        paddingRight: '0',\n        paddingLeft: '0',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        display: 'block',\n        border: \"20px solid white\",\n        backgroundColor: 'lightGreen'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default GameShow; //NOTES:\n// The hard numbers to render the level one background image on the fixed canvas size is: 300x150","map":{"version":3,"sources":["/Users/tomastobar/Development/code/flatiron_projects/KeySword/keysword-frontend/src/GameShow.js"],"names":["React","Component","LevelOneBackGround","GameShow","constructor","renderBackGound","bg","Image","src","onload","state","context","drawImage","canvasWidth","canvasHeight","levelBackgroundImage","tileSheetColumns","tileHeight","tileWidth","matrixColumns","matrix","componentDidMount","cvs","document","getElementById","ctx","getContext","setState","render","width","height","paddingRight","paddingLeft","marginLeft","marginRight","display","border","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,GAAG;AACV;;AADU,SAsBdC,eAtBc,GAsBI,MAAM;AACpB,YAAMC,EAAE,GAAG,IAAIC,KAAJ,EAAX;AACAD,MAAAA,EAAE,CAACE,GAAH,GAASN,kBAAT,CAFoB,CAGpB;;AACII,MAAAA,EAAE,CAACG,MAAH,GAAY,MAAM;AAEd,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,SAAnB,CAA6BN,EAA7B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,GAAvC,EAA4C,GAA5C;AAEH,OAJD;AAKP,KA/Ba;;AAEV,SAAKI,KAAL,GAAa;AACTG,MAAAA,WAAW,EAAE,GADJ;AAETC,MAAAA,YAAY,EAAE,GAFL;AAGTH,MAAAA,OAAO,EAAE,IAHA;AAITI,MAAAA,oBAAoB,EAAE,IAJb;AAKTC,MAAAA,gBAAgB,EAAE,CALT;AAMTC,MAAAA,UAAU,EAAE,CANH;AAOTC,MAAAA,SAAS,EAAE,CAPF;AAQTC,MAAAA,aAAa,EAAE,CARN;AASTC,MAAAA,MAAM,EAAE;AATC,KAAb;AAWH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAZ;AACA,UAAMC,GAAG,GAAGH,GAAG,CAACI,UAAJ,CAAe,IAAf,CAAZ;AACA,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,OAAO,EAAEc;AAAX,KAAd;AACA,SAAKpB,eAAL;AACH;;AAYDuB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,EAAE,EAAC,YAAX;AAAwB,MAAA,KAAK,EAAE;AAC3BC,QAAAA,KAAK,EAAG,GAAE,KAAKnB,KAAL,CAAWG,WAAY,IADN;AAE3BiB,QAAAA,MAAM,EAAG,GAAE,KAAKpB,KAAL,CAAWI,YAAa,IAFR;AAG3BiB,QAAAA,YAAY,EAAE,GAHa;AAI3BC,QAAAA,WAAW,EAAE,GAJc;AAK3BC,QAAAA,UAAU,EAAE,MALe;AAM3BC,QAAAA,WAAW,EAAE,MANc;AAO3BC,QAAAA,OAAO,EAAE,OAPkB;AAQ3BC,QAAAA,MAAM,EAAE,kBARmB;AAS3BC,QAAAA,eAAe,EAAE;AATU,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAgBH;;AAlD4B;;AAoDjC,eAAelC,QAAf,C,CAGA;AACA","sourcesContent":["import React, { Component } from 'react';\n\n//WILL HAVE TO REMOBVE THIS ONCE THE INFORMATION FOR THE BACKGROUND IMAGE IS CAPTURED FROM THE INITIAL FETCH\nimport LevelOneBackGround from './sprites/maps/level_one_background.png'\n\nclass GameShow extends Component {\n    constructor() {\n        super();\n        this.state = {\n            canvasWidth: 400,\n            canvasHeight: 400,\n            context: null,\n            levelBackgroundImage: null,\n            tileSheetColumns: 0,\n            tileHeight: 0,\n            tileWidth: 0,\n            matrixColumns: 0,\n            matrix: []\n        }\n    }\n\n    componentDidMount() {\n        const cvs = document.getElementById(\"gameCanvas\")\n        const ctx = cvs.getContext('2d')\n        this.setState({ context: ctx  })\n        this.renderBackGound()\n    }\n\n    renderBackGound = () => {\n        const bg = new Image()\n        bg.src = LevelOneBackGround\n        // debugger;\n            bg.onload = () => {\n                \n                this.state.context.drawImage(bg, 0, 0, 300, 150)\n\n            }\n    }\n    render() {\n        return (\n            <canvas id=\"gameCanvas\" style={{\n                width: `${this.state.canvasWidth}px`,\n                height: `${this.state.canvasHeight}px`,\n                paddingRight: '0',\n                paddingLeft: '0',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                display: 'block',\n                border: \"20px solid white\",\n                backgroundColor: 'lightGreen'\n            }}\n            >\n\n            </canvas>\n        )\n    }\n}\nexport default GameShow;\n\n\n//NOTES:\n// The hard numbers to render the level one background image on the fixed canvas size is: 300x150"]},"metadata":{},"sourceType":"module"}