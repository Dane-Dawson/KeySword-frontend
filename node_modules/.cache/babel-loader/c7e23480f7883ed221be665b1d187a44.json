{"ast":null,"code":"var _jsxFileName = \"/Users/dane/Development/code/KeySword-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nimport background from \"./sprites/backgrounds/stonebackground.jpg\";\nimport backgroundholes from \"./sprites/backgrounds/stonebackgroundholes.png\";\nlet baseURL = \"http://localhost:3000/\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchLevel = () => {\n      return fetch(baseURL + \"levels\").then(resp => resp.json()).then(level => this.setState({\n        level\n      }));\n    };\n\n    this.fetchUsers = () => {\n      return fetch(baseURL + \"users\").then(resp => resp.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.fetchMonsters = () => {\n      return fetch(baseURL + \"monsters\").then(resp => resp.json()).then(monsters => this.setState({\n        monsters\n      }));\n    };\n\n    this.createWordsArray = wordsString => {\n      let words = wordsString.split(\", \");\n      console.log(words);\n      this.setState({\n        words\n      });\n    };\n\n    this.createUser = userObject => {\n      fetch(baseURL + \"users\", userObject);\n    };\n\n    this.UserLogin = (username, password) => {\n      console.log(username, password);\n      let activeUser = this.state.users.filter(user => user.username === username);\n      console.log(activeUser);\n      this.setState({\n        activeUser\n      });\n\n      if (password === activeUser.password) {\n        this.setState({\n          activeUser: activeUser\n        });\n      }\n    };\n\n    this.checkIfLoggedIn = () => {\n      if (this.state.activeUser.length > 0) {\n        this.createWordsArray(this.state.level[0].words);\n        return /*#__PURE__*/React.createElement(GameShow, {\n          words: this.state.level,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 14\n          }\n        });\n      } else {\n        // this.parseUsernames()\n        return /*#__PURE__*/React.createElement(UserBar, {\n          logIn: this.UserLogin,\n          postUser: this.createUser,\n          refreshUsers: this.fetchUsers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }\n        });\n      }\n    };\n\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"]\n    };\n  } //initial setup for game data\n\n\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  } //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GameHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), this.checkIfLoggedIn(), this.state.activeUser.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GameFooter, {\n      words: this.state.activeWords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Please sign up or log in!\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dane/Development/code/KeySword-frontend/src/App.js"],"names":["React","Component","GameHeader","GameShow","GameFooter","UserBar","background","backgroundholes","baseURL","App","constructor","fetchLevel","fetch","then","resp","json","level","setState","fetchUsers","users","fetchMonsters","monsters","createWordsArray","wordsString","words","split","console","log","createUser","userObject","UserLogin","username","password","activeUser","state","filter","user","checkIfLoggedIn","length","bossWords","activeWords","componentDidMount","render","backgroundImage","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GameHeader from \"./GameHeader\";\nimport GameShow from \"./GameShow\";\nimport GameFooter from \"./GameFooter\";\nimport UserBar from \"./UserBar\";\nimport background from \"./sprites/backgrounds/stonebackground.jpg\";\nimport backgroundholes from \"./sprites/backgrounds/stonebackgroundholes.png\";\n\nlet baseURL = \"http://localhost:3000/\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      level: [],\n      monsters: [],\n      users: [],\n      activeUser: [],\n      words: [],\n      bossWords: [],\n      activeWords: [\"walter\", \"fish\"],\n    };\n  }\n  //initial setup for game data\n  componentDidMount() {\n    this.fetchLevel();\n    this.fetchUsers();\n    this.fetchMonsters();\n  }\n  //****FETCH FUNCTIONS THAT FOR SOME REASON I COULDN'T REFACTOR?? REACT IS DUMB****//\n  fetchLevel = () => {\n    return fetch(baseURL + \"levels\")\n      .then((resp) => resp.json())\n      .then((level) => this.setState({ level }));\n  };\n  fetchUsers = () => {\n    return fetch(baseURL + \"users\")\n      .then((resp) => resp.json())\n      .then((users) => this.setState({ users }));\n  };\n  fetchMonsters = () => {\n    return fetch(baseURL + \"monsters\")\n      .then((resp) => resp.json())\n      .then((monsters) => this.setState({ monsters }));\n  };\n\n  //***Helper functions *//\n\n  //take level words string and add to state words array\n  createWordsArray = (wordsString) => {\n    let words = wordsString.split(\", \")\n    console.log(words)\n    this.setState({words})\n  }\n  //create user model in DB,\n  //!!!!!!!!need to add uniqueness validation eventually!!!!!!!//\n  createUser = (userObject) => {\n    fetch(baseURL + \"users\", userObject);\n  };\n\n  //given User object, check if input of username and password exists in database, if so set activeUser to username\n  UserLogin = (username, password) => {\n    console.log(username, password);\n    let activeUser = this.state.users.filter(\n      (user) => user.username === username\n    );\n    console.log(activeUser);\n    this.setState({ activeUser });\n    if (password === activeUser.password) {\n      this.setState({ activeUser: activeUser });\n    }\n  };\n\n  checkIfLoggedIn = () => {\n    if (this.state.activeUser.length > 0) {\n      this.createWordsArray(this.state.level[0].words)\n      return <GameShow words={this.state.level} />;\n    } else {\n      // this.parseUsernames()\n      return (\n        <UserBar\n          logIn={this.UserLogin}\n          postUser={this.createUser}\n          refreshUsers={this.fetchUsers}\n        />\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        \n      >\n        <GameHeader />\n        {this.checkIfLoggedIn()}\n        {this.state.activeUser.length > 0 ? (\n          <div\n            style={{\n              backgroundImage: `url(${background})`,\n            }}\n          >\n            <GameFooter words={this.state.activeWords} />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <h2>Please sign up or log in!</h2>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}